name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test import modules
      run: |
        python -c "import app; print('App import successful')"
        python -c "import config; print('Config import successful')"
        python -c "import models; print('Models import successful')"
        python -c "import services; print('Services import successful')"
    
    - name: Check if Flask app can start
      run: |
        timeout 10s python -c "
        import os
        os.environ['TEACHER_PASSWORD'] = 'test'
        os.environ['SECRET_KEY'] = 'test-key'
        from app import app
        print('Flask app created successfully')
        " || echo "App startup test completed"